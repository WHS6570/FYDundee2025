package frc.robot;

import edu.wpi.first.math.MathUtil;
import edu.wpi.first.util.sendable.SendableRegistry;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.TimedRobot;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;
import edu.wpi.first.wpilibj.motorcontrol.PWMSparkMax;
import edu.wpi.first.wpilibj.motorcontrol.Spark;

/**
 * This is a demo program showing the use of the DifferentialDrive class, specifically it contains
 * the code necessary to operate a robot with tank drive.
 */
public class Robot extends TimedRobot {
 // private final DifferentialDrive m_robotDrive;
  private final XboxController driveController = new XboxController(0);
  private final Spark spinny = new Spark(6);

  // private final Spark m_fleftMotor = new Spark(3);
  // private final Spark m_frightMotor = new Spark(5);
  // private final Spark m_bleftMotor = new Spark(4);
  // private final Spark m_brightMotor = new Spark(6);
  public boolean bbutton;
  public boolean abutton;
  public int toggle = 0;

  public Robot() {
    // We need to invert one side of the drivetrain so that positive voltages
    // result in both sides moving forward. Depending on how your robot's
    // gearbox is constructed, you might have to invert the left side instead.
    // m_fleftMotor.addFollower(m_bleftMotor);
    // m_frightMotor.addFollower(m_brightMotor);
    // m_frightMotor.setInverted(true);

    // m_robotDrive = new DifferentialDrive(m_fleftMotor::set, m_frightMotor::set);
    // // m_leftStick = new Joystick(0);
    // // m_rightStick = new Joystick(1);
    // SendableRegistry.addChild(m_robotDrive, m_fleftMotor);
    // SendableRegistry.addChild(m_robotDrive, m_frightMotor);
  }

  @Override
  public void teleopPeriodic() {
    //BELOW HERE<---------------------------------------------

    // m_robotDrive.arcadeDrive(
    //   ((-driveController.getLeftY() * Math.abs(-driveController.getLeftY())) * (1-(-driveController.getRightTriggerAxis()*0.8))), 
    //   ((-driveController.getRightX() * Math.abs(-driveController.getRightX())) * (1-(-driveController.getRightTriggerAxis()*0.8)))
    // );
    if (driveController.getAButtonPressed()){
      toggle++;
    }
    spinny.set(getfanspeed());
    //ABOVE HERE<---------------------------------------------
}

public double getfanspeed() {
  if (toggle==0) {
    return 0;
  }
  if (toggle==1) {
    return 0.3;
  }
  if (toggle==2) {
    return 0.5;
  }
  if (toggle==3) {
    return 1;
  }
  toggle=0;
  return 0;
}
}
